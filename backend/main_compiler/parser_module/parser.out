Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement_list -> <empty>
Rule 5     statement -> command_stmt EOL
Rule 6     statement -> declaration_stmt EOL
Rule 7     statement -> if_stmt
Rule 8     declaration_stmt -> STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
Rule 9     declaration_stmt -> INT_TYPE IDENTIFIER EQUALS NUMBER
Rule 10    declaration_stmt -> DATE_TYPE IDENTIFIER EQUALS DATE_VAL
Rule 11    if_stmt -> if_then_stmt
Rule 12    if_stmt -> if_then_else_stmt
Rule 13    if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
Rule 14    if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET
Rule 15    condition -> expression GT expression
Rule 16    condition -> expression LT expression
Rule 17    condition -> expression GE expression
Rule 18    condition -> expression LE expression
Rule 19    condition -> expression EQ expression
Rule 20    condition -> expression NE expression
Rule 21    expression -> IDENTIFIER
Rule 22    expression -> NUMBER
Rule 23    expression -> STRING_LITERAL
Rule 24    expression -> DATE_VAL
Rule 25    command_stmt -> book_cmd
Rule 26    command_stmt -> cancel_cmd
Rule 27    command_stmt -> list_cmd
Rule 28    command_stmt -> check_cmd
Rule 29    command_stmt -> pay_cmd
Rule 30    command_stmt -> display_cmd
Rule 31    command_stmt -> accept_cmd
Rule 32    book_cmd -> BOOK quantity TICKETS FOR customer ON date FOR event
Rule 33    quantity -> NUMBER
Rule 34    quantity -> IDENTIFIER
Rule 35    customer -> STRING_LITERAL
Rule 36    customer -> IDENTIFIER
Rule 37    date -> DATE_VAL
Rule 38    date -> IDENTIFIER
Rule 39    event -> STRING_LITERAL
Rule 40    event -> IDENTIFIER
Rule 41    cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
Rule 42    ticket_or_tickets -> TICKET
Rule 43    ticket_or_tickets -> TICKETS
Rule 44    list_cmd -> LIST event ON date
Rule 45    list_cmd -> LIST event
Rule 46    check_cmd -> CHECK AVAILABILITY FOR event ON date
Rule 47    check_cmd -> CHECK PRICE FOR event ON date
Rule 48    pay_cmd -> PAY FOR event customer
Rule 49    display_cmd -> DISPLAY message
Rule 50    message -> STRING_LITERAL
Rule 51    message -> IDENTIFIER
Rule 52    accept_cmd -> ACCEPT IDENTIFIER
Rule 53    EOL -> DOT

Terminals, with rules where they appear

ACCEPT               : 52
AVAILABILITY         : 46
BOOK                 : 32
CANCEL               : 41
CHECK                : 46 47
DATE_TYPE            : 10
DATE_VAL             : 10 24 37
DISPLAY              : 49
DOT                  : 53
ELSE                 : 14
EQ                   : 19
EQUALS               : 8 9 10
EVENT                : 41
FOR                  : 32 32 41 41 46 47 48
GE                   : 17
GT                   : 15
IDENTIFIER           : 8 9 10 21 34 36 38 40 51 52
IF                   : 13 14
INT_TYPE             : 9
LBRACKET             : 13 14 14
LE                   : 18
LIST                 : 44 45
LPAREN               : 13 14
LT                   : 16
NE                   : 20
NUMBER               : 9 22 33
ON                   : 32 44 46 47
PAY                  : 48
PRICE                : 47
RBRACKET             : 13 14 14
RPAREN               : 13 14
STRING_LITERAL       : 8 23 35 39 50
STRING_TYPE          : 8
TICKET               : 42
TICKETS              : 32 43
error                : 

Nonterminals, with rules where they appear

EOL                  : 5 6
accept_cmd           : 31
book_cmd             : 25
cancel_cmd           : 26
check_cmd            : 28
command_stmt         : 5
condition            : 13 14
customer             : 32 41 48
date                 : 32 44 46 47
declaration_stmt     : 6
display_cmd          : 30
event                : 32 41 44 45 46 47 48
expression           : 15 15 16 16 17 17 18 18 19 19 20 20
if_stmt              : 7
if_then_else_stmt    : 12
if_then_stmt         : 11
list_cmd             : 27
message              : 49
pay_cmd              : 29
program              : 0
quantity             : 32 41
statement            : 2 3
statement_list       : 1 2 13 14 14
ticket_or_tickets    : 41

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

  ! shift/reduce conflict for STRING_TYPE resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for DATE_TYPE resolved as shift
  ! shift/reduce conflict for BOOK resolved as shift
  ! shift/reduce conflict for CANCEL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for PAY resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for ACCEPT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 4 (statement_list -> .)
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

  ! STRING_TYPE     [ reduce using rule 4 (statement_list -> .) ]
  ! INT_TYPE        [ reduce using rule 4 (statement_list -> .) ]
  ! DATE_TYPE       [ reduce using rule 4 (statement_list -> .) ]
  ! BOOK            [ reduce using rule 4 (statement_list -> .) ]
  ! CANCEL          [ reduce using rule 4 (statement_list -> .) ]
  ! LIST            [ reduce using rule 4 (statement_list -> .) ]
  ! CHECK           [ reduce using rule 4 (statement_list -> .) ]
  ! PAY             [ reduce using rule 4 (statement_list -> .) ]
  ! DISPLAY         [ reduce using rule 4 (statement_list -> .) ]
  ! ACCEPT          [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

    statement                      shift and go to state 27
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 3

    (3) statement_list -> statement .

    STRING_TYPE     reduce using rule 3 (statement_list -> statement .)
    INT_TYPE        reduce using rule 3 (statement_list -> statement .)
    DATE_TYPE       reduce using rule 3 (statement_list -> statement .)
    BOOK            reduce using rule 3 (statement_list -> statement .)
    CANCEL          reduce using rule 3 (statement_list -> statement .)
    LIST            reduce using rule 3 (statement_list -> statement .)
    CHECK           reduce using rule 3 (statement_list -> statement .)
    PAY             reduce using rule 3 (statement_list -> statement .)
    DISPLAY         reduce using rule 3 (statement_list -> statement .)
    ACCEPT          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACKET        reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> command_stmt . EOL
    (53) EOL -> . DOT

    DOT             shift and go to state 29

    EOL                            shift and go to state 28

state 5

    (6) statement -> declaration_stmt . EOL
    (53) EOL -> . DOT

    DOT             shift and go to state 29

    EOL                            shift and go to state 30

state 6

    (7) statement -> if_stmt .

    STRING_TYPE     reduce using rule 7 (statement -> if_stmt .)
    INT_TYPE        reduce using rule 7 (statement -> if_stmt .)
    DATE_TYPE       reduce using rule 7 (statement -> if_stmt .)
    BOOK            reduce using rule 7 (statement -> if_stmt .)
    CANCEL          reduce using rule 7 (statement -> if_stmt .)
    LIST            reduce using rule 7 (statement -> if_stmt .)
    CHECK           reduce using rule 7 (statement -> if_stmt .)
    PAY             reduce using rule 7 (statement -> if_stmt .)
    DISPLAY         reduce using rule 7 (statement -> if_stmt .)
    ACCEPT          reduce using rule 7 (statement -> if_stmt .)
    IF              reduce using rule 7 (statement -> if_stmt .)
    $end            reduce using rule 7 (statement -> if_stmt .)
    RBRACKET        reduce using rule 7 (statement -> if_stmt .)


state 7

    (25) command_stmt -> book_cmd .

    DOT             reduce using rule 25 (command_stmt -> book_cmd .)


state 8

    (26) command_stmt -> cancel_cmd .

    DOT             reduce using rule 26 (command_stmt -> cancel_cmd .)


state 9

    (27) command_stmt -> list_cmd .

    DOT             reduce using rule 27 (command_stmt -> list_cmd .)


state 10

    (28) command_stmt -> check_cmd .

    DOT             reduce using rule 28 (command_stmt -> check_cmd .)


state 11

    (29) command_stmt -> pay_cmd .

    DOT             reduce using rule 29 (command_stmt -> pay_cmd .)


state 12

    (30) command_stmt -> display_cmd .

    DOT             reduce using rule 30 (command_stmt -> display_cmd .)


state 13

    (31) command_stmt -> accept_cmd .

    DOT             reduce using rule 31 (command_stmt -> accept_cmd .)


state 14

    (8) declaration_stmt -> STRING_TYPE . IDENTIFIER EQUALS STRING_LITERAL

    IDENTIFIER      shift and go to state 31


state 15

    (9) declaration_stmt -> INT_TYPE . IDENTIFIER EQUALS NUMBER

    IDENTIFIER      shift and go to state 32


state 16

    (10) declaration_stmt -> DATE_TYPE . IDENTIFIER EQUALS DATE_VAL

    IDENTIFIER      shift and go to state 33


state 17

    (11) if_stmt -> if_then_stmt .

    STRING_TYPE     reduce using rule 11 (if_stmt -> if_then_stmt .)
    INT_TYPE        reduce using rule 11 (if_stmt -> if_then_stmt .)
    DATE_TYPE       reduce using rule 11 (if_stmt -> if_then_stmt .)
    BOOK            reduce using rule 11 (if_stmt -> if_then_stmt .)
    CANCEL          reduce using rule 11 (if_stmt -> if_then_stmt .)
    LIST            reduce using rule 11 (if_stmt -> if_then_stmt .)
    CHECK           reduce using rule 11 (if_stmt -> if_then_stmt .)
    PAY             reduce using rule 11 (if_stmt -> if_then_stmt .)
    DISPLAY         reduce using rule 11 (if_stmt -> if_then_stmt .)
    ACCEPT          reduce using rule 11 (if_stmt -> if_then_stmt .)
    IF              reduce using rule 11 (if_stmt -> if_then_stmt .)
    $end            reduce using rule 11 (if_stmt -> if_then_stmt .)
    RBRACKET        reduce using rule 11 (if_stmt -> if_then_stmt .)


state 18

    (12) if_stmt -> if_then_else_stmt .

    STRING_TYPE     reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    INT_TYPE        reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    DATE_TYPE       reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    BOOK            reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    CANCEL          reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    LIST            reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    CHECK           reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    PAY             reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    DISPLAY         reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    ACCEPT          reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    IF              reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    $end            reduce using rule 12 (if_stmt -> if_then_else_stmt .)
    RBRACKET        reduce using rule 12 (if_stmt -> if_then_else_stmt .)


state 19

    (32) book_cmd -> BOOK . quantity TICKETS FOR customer ON date FOR event
    (33) quantity -> . NUMBER
    (34) quantity -> . IDENTIFIER

    NUMBER          shift and go to state 35
    IDENTIFIER      shift and go to state 36

    quantity                       shift and go to state 34

state 20

    (41) cancel_cmd -> CANCEL . quantity ticket_or_tickets FOR customer FOR EVENT event
    (33) quantity -> . NUMBER
    (34) quantity -> . IDENTIFIER

    NUMBER          shift and go to state 35
    IDENTIFIER      shift and go to state 36

    quantity                       shift and go to state 37

state 21

    (44) list_cmd -> LIST . event ON date
    (45) list_cmd -> LIST . event
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 38

state 22

    (46) check_cmd -> CHECK . AVAILABILITY FOR event ON date
    (47) check_cmd -> CHECK . PRICE FOR event ON date

    AVAILABILITY    shift and go to state 41
    PRICE           shift and go to state 42


state 23

    (48) pay_cmd -> PAY . FOR event customer

    FOR             shift and go to state 43


state 24

    (49) display_cmd -> DISPLAY . message
    (50) message -> . STRING_LITERAL
    (51) message -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 45
    IDENTIFIER      shift and go to state 46

    message                        shift and go to state 44

state 25

    (52) accept_cmd -> ACCEPT . IDENTIFIER

    IDENTIFIER      shift and go to state 47


state 26

    (13) if_then_stmt -> IF . LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> IF . LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    LPAREN          shift and go to state 48


state 27

    (2) statement_list -> statement_list statement .

    STRING_TYPE     reduce using rule 2 (statement_list -> statement_list statement .)
    INT_TYPE        reduce using rule 2 (statement_list -> statement_list statement .)
    DATE_TYPE       reduce using rule 2 (statement_list -> statement_list statement .)
    BOOK            reduce using rule 2 (statement_list -> statement_list statement .)
    CANCEL          reduce using rule 2 (statement_list -> statement_list statement .)
    LIST            reduce using rule 2 (statement_list -> statement_list statement .)
    CHECK           reduce using rule 2 (statement_list -> statement_list statement .)
    PAY             reduce using rule 2 (statement_list -> statement_list statement .)
    DISPLAY         reduce using rule 2 (statement_list -> statement_list statement .)
    ACCEPT          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACKET        reduce using rule 2 (statement_list -> statement_list statement .)


state 28

    (5) statement -> command_stmt EOL .

    STRING_TYPE     reduce using rule 5 (statement -> command_stmt EOL .)
    INT_TYPE        reduce using rule 5 (statement -> command_stmt EOL .)
    DATE_TYPE       reduce using rule 5 (statement -> command_stmt EOL .)
    BOOK            reduce using rule 5 (statement -> command_stmt EOL .)
    CANCEL          reduce using rule 5 (statement -> command_stmt EOL .)
    LIST            reduce using rule 5 (statement -> command_stmt EOL .)
    CHECK           reduce using rule 5 (statement -> command_stmt EOL .)
    PAY             reduce using rule 5 (statement -> command_stmt EOL .)
    DISPLAY         reduce using rule 5 (statement -> command_stmt EOL .)
    ACCEPT          reduce using rule 5 (statement -> command_stmt EOL .)
    IF              reduce using rule 5 (statement -> command_stmt EOL .)
    $end            reduce using rule 5 (statement -> command_stmt EOL .)
    RBRACKET        reduce using rule 5 (statement -> command_stmt EOL .)


state 29

    (53) EOL -> DOT .

    STRING_TYPE     reduce using rule 53 (EOL -> DOT .)
    INT_TYPE        reduce using rule 53 (EOL -> DOT .)
    DATE_TYPE       reduce using rule 53 (EOL -> DOT .)
    BOOK            reduce using rule 53 (EOL -> DOT .)
    CANCEL          reduce using rule 53 (EOL -> DOT .)
    LIST            reduce using rule 53 (EOL -> DOT .)
    CHECK           reduce using rule 53 (EOL -> DOT .)
    PAY             reduce using rule 53 (EOL -> DOT .)
    DISPLAY         reduce using rule 53 (EOL -> DOT .)
    ACCEPT          reduce using rule 53 (EOL -> DOT .)
    IF              reduce using rule 53 (EOL -> DOT .)
    $end            reduce using rule 53 (EOL -> DOT .)
    RBRACKET        reduce using rule 53 (EOL -> DOT .)


state 30

    (6) statement -> declaration_stmt EOL .

    STRING_TYPE     reduce using rule 6 (statement -> declaration_stmt EOL .)
    INT_TYPE        reduce using rule 6 (statement -> declaration_stmt EOL .)
    DATE_TYPE       reduce using rule 6 (statement -> declaration_stmt EOL .)
    BOOK            reduce using rule 6 (statement -> declaration_stmt EOL .)
    CANCEL          reduce using rule 6 (statement -> declaration_stmt EOL .)
    LIST            reduce using rule 6 (statement -> declaration_stmt EOL .)
    CHECK           reduce using rule 6 (statement -> declaration_stmt EOL .)
    PAY             reduce using rule 6 (statement -> declaration_stmt EOL .)
    DISPLAY         reduce using rule 6 (statement -> declaration_stmt EOL .)
    ACCEPT          reduce using rule 6 (statement -> declaration_stmt EOL .)
    IF              reduce using rule 6 (statement -> declaration_stmt EOL .)
    $end            reduce using rule 6 (statement -> declaration_stmt EOL .)
    RBRACKET        reduce using rule 6 (statement -> declaration_stmt EOL .)


state 31

    (8) declaration_stmt -> STRING_TYPE IDENTIFIER . EQUALS STRING_LITERAL

    EQUALS          shift and go to state 49


state 32

    (9) declaration_stmt -> INT_TYPE IDENTIFIER . EQUALS NUMBER

    EQUALS          shift and go to state 50


state 33

    (10) declaration_stmt -> DATE_TYPE IDENTIFIER . EQUALS DATE_VAL

    EQUALS          shift and go to state 51


state 34

    (32) book_cmd -> BOOK quantity . TICKETS FOR customer ON date FOR event

    TICKETS         shift and go to state 52


state 35

    (33) quantity -> NUMBER .

    TICKETS         reduce using rule 33 (quantity -> NUMBER .)
    TICKET          reduce using rule 33 (quantity -> NUMBER .)


state 36

    (34) quantity -> IDENTIFIER .

    TICKETS         reduce using rule 34 (quantity -> IDENTIFIER .)
    TICKET          reduce using rule 34 (quantity -> IDENTIFIER .)


state 37

    (41) cancel_cmd -> CANCEL quantity . ticket_or_tickets FOR customer FOR EVENT event
    (42) ticket_or_tickets -> . TICKET
    (43) ticket_or_tickets -> . TICKETS

    TICKET          shift and go to state 54
    TICKETS         shift and go to state 55

    ticket_or_tickets              shift and go to state 53

state 38

    (44) list_cmd -> LIST event . ON date
    (45) list_cmd -> LIST event .

    ON              shift and go to state 56
    DOT             reduce using rule 45 (list_cmd -> LIST event .)


state 39

    (39) event -> STRING_LITERAL .

    ON              reduce using rule 39 (event -> STRING_LITERAL .)
    DOT             reduce using rule 39 (event -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 39 (event -> STRING_LITERAL .)
    IDENTIFIER      reduce using rule 39 (event -> STRING_LITERAL .)


state 40

    (40) event -> IDENTIFIER .

    ON              reduce using rule 40 (event -> IDENTIFIER .)
    DOT             reduce using rule 40 (event -> IDENTIFIER .)
    STRING_LITERAL  reduce using rule 40 (event -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 40 (event -> IDENTIFIER .)


state 41

    (46) check_cmd -> CHECK AVAILABILITY . FOR event ON date

    FOR             shift and go to state 57


state 42

    (47) check_cmd -> CHECK PRICE . FOR event ON date

    FOR             shift and go to state 58


state 43

    (48) pay_cmd -> PAY FOR . event customer
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 59

state 44

    (49) display_cmd -> DISPLAY message .

    DOT             reduce using rule 49 (display_cmd -> DISPLAY message .)


state 45

    (50) message -> STRING_LITERAL .

    DOT             reduce using rule 50 (message -> STRING_LITERAL .)


state 46

    (51) message -> IDENTIFIER .

    DOT             reduce using rule 51 (message -> IDENTIFIER .)


state 47

    (52) accept_cmd -> ACCEPT IDENTIFIER .

    DOT             reduce using rule 52 (accept_cmd -> ACCEPT IDENTIFIER .)


state 48

    (13) if_then_stmt -> IF LPAREN . condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> IF LPAREN . condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET
    (15) condition -> . expression GT expression
    (16) condition -> . expression LT expression
    (17) condition -> . expression GE expression
    (18) condition -> . expression LE expression
    (19) condition -> . expression EQ expression
    (20) condition -> . expression NE expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    condition                      shift and go to state 60
    expression                     shift and go to state 61

state 49

    (8) declaration_stmt -> STRING_TYPE IDENTIFIER EQUALS . STRING_LITERAL

    STRING_LITERAL  shift and go to state 66


state 50

    (9) declaration_stmt -> INT_TYPE IDENTIFIER EQUALS . NUMBER

    NUMBER          shift and go to state 67


state 51

    (10) declaration_stmt -> DATE_TYPE IDENTIFIER EQUALS . DATE_VAL

    DATE_VAL        shift and go to state 68


state 52

    (32) book_cmd -> BOOK quantity TICKETS . FOR customer ON date FOR event

    FOR             shift and go to state 69


state 53

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets . FOR customer FOR EVENT event

    FOR             shift and go to state 70


state 54

    (42) ticket_or_tickets -> TICKET .

    FOR             reduce using rule 42 (ticket_or_tickets -> TICKET .)


state 55

    (43) ticket_or_tickets -> TICKETS .

    FOR             reduce using rule 43 (ticket_or_tickets -> TICKETS .)


state 56

    (44) list_cmd -> LIST event ON . date
    (37) date -> . DATE_VAL
    (38) date -> . IDENTIFIER

    DATE_VAL        shift and go to state 72
    IDENTIFIER      shift and go to state 73

    date                           shift and go to state 71

state 57

    (46) check_cmd -> CHECK AVAILABILITY FOR . event ON date
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 74

state 58

    (47) check_cmd -> CHECK PRICE FOR . event ON date
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 75

state 59

    (48) pay_cmd -> PAY FOR event . customer
    (35) customer -> . STRING_LITERAL
    (36) customer -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 77
    IDENTIFIER      shift and go to state 78

    customer                       shift and go to state 76

state 60

    (13) if_then_stmt -> IF LPAREN condition . RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> IF LPAREN condition . RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    RPAREN          shift and go to state 79


state 61

    (15) condition -> expression . GT expression
    (16) condition -> expression . LT expression
    (17) condition -> expression . GE expression
    (18) condition -> expression . LE expression
    (19) condition -> expression . EQ expression
    (20) condition -> expression . NE expression

    GT              shift and go to state 80
    LT              shift and go to state 81
    GE              shift and go to state 82
    LE              shift and go to state 83
    EQ              shift and go to state 84
    NE              shift and go to state 85


state 62

    (21) expression -> IDENTIFIER .

    GT              reduce using rule 21 (expression -> IDENTIFIER .)
    LT              reduce using rule 21 (expression -> IDENTIFIER .)
    GE              reduce using rule 21 (expression -> IDENTIFIER .)
    LE              reduce using rule 21 (expression -> IDENTIFIER .)
    EQ              reduce using rule 21 (expression -> IDENTIFIER .)
    NE              reduce using rule 21 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER .)


state 63

    (22) expression -> NUMBER .

    GT              reduce using rule 22 (expression -> NUMBER .)
    LT              reduce using rule 22 (expression -> NUMBER .)
    GE              reduce using rule 22 (expression -> NUMBER .)
    LE              reduce using rule 22 (expression -> NUMBER .)
    EQ              reduce using rule 22 (expression -> NUMBER .)
    NE              reduce using rule 22 (expression -> NUMBER .)
    RPAREN          reduce using rule 22 (expression -> NUMBER .)


state 64

    (23) expression -> STRING_LITERAL .

    GT              reduce using rule 23 (expression -> STRING_LITERAL .)
    LT              reduce using rule 23 (expression -> STRING_LITERAL .)
    GE              reduce using rule 23 (expression -> STRING_LITERAL .)
    LE              reduce using rule 23 (expression -> STRING_LITERAL .)
    EQ              reduce using rule 23 (expression -> STRING_LITERAL .)
    NE              reduce using rule 23 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 23 (expression -> STRING_LITERAL .)


state 65

    (24) expression -> DATE_VAL .

    GT              reduce using rule 24 (expression -> DATE_VAL .)
    LT              reduce using rule 24 (expression -> DATE_VAL .)
    GE              reduce using rule 24 (expression -> DATE_VAL .)
    LE              reduce using rule 24 (expression -> DATE_VAL .)
    EQ              reduce using rule 24 (expression -> DATE_VAL .)
    NE              reduce using rule 24 (expression -> DATE_VAL .)
    RPAREN          reduce using rule 24 (expression -> DATE_VAL .)


state 66

    (8) declaration_stmt -> STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL .

    DOT             reduce using rule 8 (declaration_stmt -> STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL .)


state 67

    (9) declaration_stmt -> INT_TYPE IDENTIFIER EQUALS NUMBER .

    DOT             reduce using rule 9 (declaration_stmt -> INT_TYPE IDENTIFIER EQUALS NUMBER .)


state 68

    (10) declaration_stmt -> DATE_TYPE IDENTIFIER EQUALS DATE_VAL .

    DOT             reduce using rule 10 (declaration_stmt -> DATE_TYPE IDENTIFIER EQUALS DATE_VAL .)


state 69

    (32) book_cmd -> BOOK quantity TICKETS FOR . customer ON date FOR event
    (35) customer -> . STRING_LITERAL
    (36) customer -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 77
    IDENTIFIER      shift and go to state 78

    customer                       shift and go to state 86

state 70

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets FOR . customer FOR EVENT event
    (35) customer -> . STRING_LITERAL
    (36) customer -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 77
    IDENTIFIER      shift and go to state 78

    customer                       shift and go to state 87

state 71

    (44) list_cmd -> LIST event ON date .

    DOT             reduce using rule 44 (list_cmd -> LIST event ON date .)


state 72

    (37) date -> DATE_VAL .

    DOT             reduce using rule 37 (date -> DATE_VAL .)
    FOR             reduce using rule 37 (date -> DATE_VAL .)


state 73

    (38) date -> IDENTIFIER .

    DOT             reduce using rule 38 (date -> IDENTIFIER .)
    FOR             reduce using rule 38 (date -> IDENTIFIER .)


state 74

    (46) check_cmd -> CHECK AVAILABILITY FOR event . ON date

    ON              shift and go to state 88


state 75

    (47) check_cmd -> CHECK PRICE FOR event . ON date

    ON              shift and go to state 89


state 76

    (48) pay_cmd -> PAY FOR event customer .

    DOT             reduce using rule 48 (pay_cmd -> PAY FOR event customer .)


state 77

    (35) customer -> STRING_LITERAL .

    DOT             reduce using rule 35 (customer -> STRING_LITERAL .)
    ON              reduce using rule 35 (customer -> STRING_LITERAL .)
    FOR             reduce using rule 35 (customer -> STRING_LITERAL .)


state 78

    (36) customer -> IDENTIFIER .

    DOT             reduce using rule 36 (customer -> IDENTIFIER .)
    ON              reduce using rule 36 (customer -> IDENTIFIER .)
    FOR             reduce using rule 36 (customer -> IDENTIFIER .)


state 79

    (13) if_then_stmt -> IF LPAREN condition RPAREN . LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> IF LPAREN condition RPAREN . LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    LBRACKET        shift and go to state 90


state 80

    (15) condition -> expression GT . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 91

state 81

    (16) condition -> expression LT . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 92

state 82

    (17) condition -> expression GE . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 93

state 83

    (18) condition -> expression LE . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 94

state 84

    (19) condition -> expression EQ . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 95

state 85

    (20) condition -> expression NE . expression
    (21) expression -> . IDENTIFIER
    (22) expression -> . NUMBER
    (23) expression -> . STRING_LITERAL
    (24) expression -> . DATE_VAL

    IDENTIFIER      shift and go to state 62
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    DATE_VAL        shift and go to state 65

    expression                     shift and go to state 96

state 86

    (32) book_cmd -> BOOK quantity TICKETS FOR customer . ON date FOR event

    ON              shift and go to state 97


state 87

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer . FOR EVENT event

    FOR             shift and go to state 98


state 88

    (46) check_cmd -> CHECK AVAILABILITY FOR event ON . date
    (37) date -> . DATE_VAL
    (38) date -> . IDENTIFIER

    DATE_VAL        shift and go to state 72
    IDENTIFIER      shift and go to state 73

    date                           shift and go to state 99

state 89

    (47) check_cmd -> CHECK PRICE FOR event ON . date
    (37) date -> . DATE_VAL
    (38) date -> . IDENTIFIER

    DATE_VAL        shift and go to state 72
    IDENTIFIER      shift and go to state 73

    date                           shift and go to state 100

state 90

    (13) if_then_stmt -> IF LPAREN condition RPAREN LBRACKET . statement_list RBRACKET
    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET . statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

  ! shift/reduce conflict for STRING_TYPE resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for DATE_TYPE resolved as shift
  ! shift/reduce conflict for BOOK resolved as shift
  ! shift/reduce conflict for CANCEL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for PAY resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for ACCEPT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    RBRACKET        reduce using rule 4 (statement_list -> .)
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

  ! STRING_TYPE     [ reduce using rule 4 (statement_list -> .) ]
  ! INT_TYPE        [ reduce using rule 4 (statement_list -> .) ]
  ! DATE_TYPE       [ reduce using rule 4 (statement_list -> .) ]
  ! BOOK            [ reduce using rule 4 (statement_list -> .) ]
  ! CANCEL          [ reduce using rule 4 (statement_list -> .) ]
  ! LIST            [ reduce using rule 4 (statement_list -> .) ]
  ! CHECK           [ reduce using rule 4 (statement_list -> .) ]
  ! PAY             [ reduce using rule 4 (statement_list -> .) ]
  ! DISPLAY         [ reduce using rule 4 (statement_list -> .) ]
  ! ACCEPT          [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 101
    statement                      shift and go to state 3
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 91

    (15) condition -> expression GT expression .

    RPAREN          reduce using rule 15 (condition -> expression GT expression .)


state 92

    (16) condition -> expression LT expression .

    RPAREN          reduce using rule 16 (condition -> expression LT expression .)


state 93

    (17) condition -> expression GE expression .

    RPAREN          reduce using rule 17 (condition -> expression GE expression .)


state 94

    (18) condition -> expression LE expression .

    RPAREN          reduce using rule 18 (condition -> expression LE expression .)


state 95

    (19) condition -> expression EQ expression .

    RPAREN          reduce using rule 19 (condition -> expression EQ expression .)


state 96

    (20) condition -> expression NE expression .

    RPAREN          reduce using rule 20 (condition -> expression NE expression .)


state 97

    (32) book_cmd -> BOOK quantity TICKETS FOR customer ON . date FOR event
    (37) date -> . DATE_VAL
    (38) date -> . IDENTIFIER

    DATE_VAL        shift and go to state 72
    IDENTIFIER      shift and go to state 73

    date                           shift and go to state 102

state 98

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer FOR . EVENT event

    EVENT           shift and go to state 103


state 99

    (46) check_cmd -> CHECK AVAILABILITY FOR event ON date .

    DOT             reduce using rule 46 (check_cmd -> CHECK AVAILABILITY FOR event ON date .)


state 100

    (47) check_cmd -> CHECK PRICE FOR event ON date .

    DOT             reduce using rule 47 (check_cmd -> CHECK PRICE FOR event ON date .)


state 101

    (13) if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list . RBRACKET
    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list . RBRACKET ELSE LBRACKET statement_list RBRACKET
    (2) statement_list -> statement_list . statement
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    RBRACKET        shift and go to state 104
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

    statement                      shift and go to state 27
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 102

    (32) book_cmd -> BOOK quantity TICKETS FOR customer ON date . FOR event

    FOR             shift and go to state 105


state 103

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer FOR EVENT . event
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 106

state 104

    (13) if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .
    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET . ELSE LBRACKET statement_list RBRACKET

    STRING_TYPE     reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    INT_TYPE        reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    DATE_TYPE       reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    BOOK            reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    CANCEL          reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    LIST            reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    CHECK           reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    PAY             reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    DISPLAY         reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    ACCEPT          reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    IF              reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    $end            reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    RBRACKET        reduce using rule 13 (if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET .)
    ELSE            shift and go to state 107


state 105

    (32) book_cmd -> BOOK quantity TICKETS FOR customer ON date FOR . event
    (39) event -> . STRING_LITERAL
    (40) event -> . IDENTIFIER

    STRING_LITERAL  shift and go to state 39
    IDENTIFIER      shift and go to state 40

    event                          shift and go to state 108

state 106

    (41) cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event .

    DOT             reduce using rule 41 (cancel_cmd -> CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event .)


state 107

    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE . LBRACKET statement_list RBRACKET

    LBRACKET        shift and go to state 109


state 108

    (32) book_cmd -> BOOK quantity TICKETS FOR customer ON date FOR event .

    DOT             reduce using rule 32 (book_cmd -> BOOK quantity TICKETS FOR customer ON date FOR event .)


state 109

    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET . statement_list RBRACKET
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

  ! shift/reduce conflict for STRING_TYPE resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for DATE_TYPE resolved as shift
  ! shift/reduce conflict for BOOK resolved as shift
  ! shift/reduce conflict for CANCEL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for PAY resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for ACCEPT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    RBRACKET        reduce using rule 4 (statement_list -> .)
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

  ! STRING_TYPE     [ reduce using rule 4 (statement_list -> .) ]
  ! INT_TYPE        [ reduce using rule 4 (statement_list -> .) ]
  ! DATE_TYPE       [ reduce using rule 4 (statement_list -> .) ]
  ! BOOK            [ reduce using rule 4 (statement_list -> .) ]
  ! CANCEL          [ reduce using rule 4 (statement_list -> .) ]
  ! LIST            [ reduce using rule 4 (statement_list -> .) ]
  ! CHECK           [ reduce using rule 4 (statement_list -> .) ]
  ! PAY             [ reduce using rule 4 (statement_list -> .) ]
  ! DISPLAY         [ reduce using rule 4 (statement_list -> .) ]
  ! ACCEPT          [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 110
    statement                      shift and go to state 3
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 110

    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list . RBRACKET
    (2) statement_list -> statement_list . statement
    (5) statement -> . command_stmt EOL
    (6) statement -> . declaration_stmt EOL
    (7) statement -> . if_stmt
    (25) command_stmt -> . book_cmd
    (26) command_stmt -> . cancel_cmd
    (27) command_stmt -> . list_cmd
    (28) command_stmt -> . check_cmd
    (29) command_stmt -> . pay_cmd
    (30) command_stmt -> . display_cmd
    (31) command_stmt -> . accept_cmd
    (8) declaration_stmt -> . STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL
    (9) declaration_stmt -> . INT_TYPE IDENTIFIER EQUALS NUMBER
    (10) declaration_stmt -> . DATE_TYPE IDENTIFIER EQUALS DATE_VAL
    (11) if_stmt -> . if_then_stmt
    (12) if_stmt -> . if_then_else_stmt
    (32) book_cmd -> . BOOK quantity TICKETS FOR customer ON date FOR event
    (41) cancel_cmd -> . CANCEL quantity ticket_or_tickets FOR customer FOR EVENT event
    (44) list_cmd -> . LIST event ON date
    (45) list_cmd -> . LIST event
    (46) check_cmd -> . CHECK AVAILABILITY FOR event ON date
    (47) check_cmd -> . CHECK PRICE FOR event ON date
    (48) pay_cmd -> . PAY FOR event customer
    (49) display_cmd -> . DISPLAY message
    (52) accept_cmd -> . ACCEPT IDENTIFIER
    (13) if_then_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET
    (14) if_then_else_stmt -> . IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET

    RBRACKET        shift and go to state 111
    STRING_TYPE     shift and go to state 14
    INT_TYPE        shift and go to state 15
    DATE_TYPE       shift and go to state 16
    BOOK            shift and go to state 19
    CANCEL          shift and go to state 20
    LIST            shift and go to state 21
    CHECK           shift and go to state 22
    PAY             shift and go to state 23
    DISPLAY         shift and go to state 24
    ACCEPT          shift and go to state 25
    IF              shift and go to state 26

    statement                      shift and go to state 27
    command_stmt                   shift and go to state 4
    declaration_stmt               shift and go to state 5
    if_stmt                        shift and go to state 6
    book_cmd                       shift and go to state 7
    cancel_cmd                     shift and go to state 8
    list_cmd                       shift and go to state 9
    check_cmd                      shift and go to state 10
    pay_cmd                        shift and go to state 11
    display_cmd                    shift and go to state 12
    accept_cmd                     shift and go to state 13
    if_then_stmt                   shift and go to state 17
    if_then_else_stmt              shift and go to state 18

state 111

    (14) if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .

    STRING_TYPE     reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    INT_TYPE        reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    DATE_TYPE       reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    BOOK            reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    CANCEL          reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    LIST            reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    CHECK           reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    PAY             reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    DISPLAY         reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    ACCEPT          reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    IF              reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    $end            reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)
    RBRACKET        reduce using rule 14 (if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STRING_TYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for DATE_TYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOK in state 0 resolved as shift
WARNING: shift/reduce conflict for CANCEL in state 0 resolved as shift
WARNING: shift/reduce conflict for LIST in state 0 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 0 resolved as shift
WARNING: shift/reduce conflict for PAY in state 0 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 0 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING_TYPE in state 90 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 90 resolved as shift
WARNING: shift/reduce conflict for DATE_TYPE in state 90 resolved as shift
WARNING: shift/reduce conflict for BOOK in state 90 resolved as shift
WARNING: shift/reduce conflict for CANCEL in state 90 resolved as shift
WARNING: shift/reduce conflict for LIST in state 90 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 90 resolved as shift
WARNING: shift/reduce conflict for PAY in state 90 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 90 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING_TYPE in state 109 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 109 resolved as shift
WARNING: shift/reduce conflict for DATE_TYPE in state 109 resolved as shift
WARNING: shift/reduce conflict for BOOK in state 109 resolved as shift
WARNING: shift/reduce conflict for CANCEL in state 109 resolved as shift
WARNING: shift/reduce conflict for LIST in state 109 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 109 resolved as shift
WARNING: shift/reduce conflict for PAY in state 109 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 109 resolved as shift
WARNING: shift/reduce conflict for ACCEPT in state 109 resolved as shift
WARNING: shift/reduce conflict for IF in state 109 resolved as shift
