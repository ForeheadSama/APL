
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACCEPT AVAILABILITY BOOK CANCEL CHECK DATE_TYPE DATE_VAL DISPLAY DOT ELSE EQ EQUALS EVENT EVENTS FOR GE GT IDENTIFIER IF INT_TYPE LBRACKET LE LIST LPAREN LT NE NUMBER ON PAY PRICE RBRACKET RPAREN STRING_LITERAL STRING_TYPE TICKET TICKETSprogram : statement_liststatement_list : statement_list statement\n                      | statement\n                      | statement : command_stmt EOL\n                 | declaration_stmt EOL\n                 | if_stmtdeclaration_stmt : STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL\n                        | INT_TYPE IDENTIFIER EQUALS NUMBER\n                        | DATE_TYPE IDENTIFIER EQUALS DATE_VALif_stmt : if_then_stmt\n               | if_then_else_stmtif_then_stmt : IF LPAREN condition RPAREN LBRACKET statement_list RBRACKETif_then_else_stmt : IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKETcondition : expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression EQ expression\n                 | expression NE expressionexpression : IDENTIFIER\n                 | NUMBER\n                 | STRING_LITERAL\n                 | DATE_VALcommand_stmt : book_cmd\n                     | cancel_cmd\n                     | list_cmd\n                     | check_cmd\n                     | pay_cmd\n                     | display_cmd\n                     | accept_cmdbook_cmd : BOOK quantity TICKETS FOR customer ON date FOR eventquantity : NUMBER\n                | IDENTIFIERcustomer : STRING_LITERAL\n                | IDENTIFIERdate : DATE_VAL\n            | IDENTIFIERevent : STRING_LITERAL\n             | IDENTIFIERcancel_cmd : CANCEL ticket_or_tickets FOR customer EVENT eventticket_or_tickets : TICKET\n                          | TICKETSlist_cmd : LIST EVENTS ON date\n                  | LIST EVENTS FOR eventcheck_cmd : CHECK AVAILABILITY FOR event ON date\n                  | CHECK PRICE FOR event ON datepay_cmd : PAY FOR event customerdisplay_cmd : DISPLAY messagemessage : STRING_LITERAL\n               | IDENTIFIERaccept_cmd : ACCEPT IDENTIFIEREOL : DOT'
    
_lr_action_items = {'STRING_TYPE':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[14,14,-3,-7,-11,-12,-2,-5,-53,-6,14,14,-13,14,14,-14,]),'INT_TYPE':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[15,15,-3,-7,-11,-12,-2,-5,-53,-6,15,15,-13,15,15,-14,]),'DATE_TYPE':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[16,16,-3,-7,-11,-12,-2,-5,-53,-6,16,16,-13,16,16,-14,]),'BOOK':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[19,19,-3,-7,-11,-12,-2,-5,-53,-6,19,19,-13,19,19,-14,]),'CANCEL':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[20,20,-3,-7,-11,-12,-2,-5,-53,-6,20,20,-13,20,20,-14,]),'LIST':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[21,21,-3,-7,-11,-12,-2,-5,-53,-6,21,21,-13,21,21,-14,]),'CHECK':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[22,22,-3,-7,-11,-12,-2,-5,-53,-6,22,22,-13,22,22,-14,]),'PAY':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[23,23,-3,-7,-11,-12,-2,-5,-53,-6,23,23,-13,23,23,-14,]),'DISPLAY':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[24,24,-3,-7,-11,-12,-2,-5,-53,-6,24,24,-13,24,24,-14,]),'ACCEPT':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[25,25,-3,-7,-11,-12,-2,-5,-53,-6,25,25,-13,25,25,-14,]),'IF':([0,2,3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[26,26,-3,-7,-11,-12,-2,-5,-53,-6,26,26,-13,26,26,-14,]),'$end':([0,1,2,3,6,17,18,27,28,29,30,105,111,],[-4,0,-1,-3,-7,-11,-12,-2,-5,-53,-6,-13,-14,]),'RBRACKET':([3,6,17,18,27,28,29,30,92,103,105,109,110,111,],[-3,-7,-11,-12,-2,-5,-53,-6,-4,105,-13,-4,111,-14,]),'DOT':([4,5,7,8,9,10,11,12,13,44,45,46,47,59,60,67,68,69,72,73,74,75,76,77,80,100,101,102,108,],[29,29,-25,-26,-27,-28,-29,-30,-31,-49,-50,-51,-52,-39,-40,-8,-9,-10,-35,-36,-44,-37,-38,-45,-48,-41,-46,-47,-32,]),'IDENTIFIER':([14,15,16,19,24,25,43,48,53,54,55,56,57,58,59,60,70,82,83,84,85,86,87,89,90,91,99,106,],[31,32,33,36,46,47,60,63,73,76,60,60,60,73,-39,-40,73,63,63,63,63,63,63,60,76,76,76,60,]),'NUMBER':([19,48,50,82,83,84,85,86,87,],[35,64,68,64,64,64,64,64,64,]),'TICKET':([20,],[38,]),'TICKETS':([20,34,35,36,],[39,52,-33,-34,]),'EVENTS':([21,],[40,]),'AVAILABILITY':([22,],[41,]),'PRICE':([22,],[42,]),'FOR':([23,37,38,39,40,41,42,52,75,76,104,],[43,53,-42,-43,55,56,57,70,-37,-38,106,]),'STRING_LITERAL':([24,43,48,49,53,55,56,57,58,59,60,70,82,83,84,85,86,87,89,106,],[45,59,65,67,72,59,59,59,72,-39,-40,72,65,65,65,65,65,65,59,59,]),'LPAREN':([26,],[48,]),'EQUALS':([31,32,33,],[49,50,51,]),'ON':([40,59,60,72,73,78,79,88,],[54,-39,-40,-35,-36,90,91,99,]),'DATE_VAL':([48,51,54,82,83,84,85,86,87,90,91,99,],[66,69,75,66,66,66,66,66,66,75,75,75,]),'RPAREN':([61,63,64,65,66,93,94,95,96,97,98,],[81,-21,-22,-23,-24,-15,-16,-17,-18,-19,-20,]),'GT':([62,63,64,65,66,],[82,-21,-22,-23,-24,]),'LT':([62,63,64,65,66,],[83,-21,-22,-23,-24,]),'GE':([62,63,64,65,66,],[84,-21,-22,-23,-24,]),'LE':([62,63,64,65,66,],[85,-21,-22,-23,-24,]),'EQ':([62,63,64,65,66,],[86,-21,-22,-23,-24,]),'NE':([62,63,64,65,66,],[87,-21,-22,-23,-24,]),'EVENT':([71,72,73,],[89,-35,-36,]),'LBRACKET':([81,107,],[92,109,]),'ELSE':([105,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,92,109,],[2,103,110,]),'statement':([0,2,92,103,109,110,],[3,27,3,27,3,27,]),'command_stmt':([0,2,92,103,109,110,],[4,4,4,4,4,4,]),'declaration_stmt':([0,2,92,103,109,110,],[5,5,5,5,5,5,]),'if_stmt':([0,2,92,103,109,110,],[6,6,6,6,6,6,]),'book_cmd':([0,2,92,103,109,110,],[7,7,7,7,7,7,]),'cancel_cmd':([0,2,92,103,109,110,],[8,8,8,8,8,8,]),'list_cmd':([0,2,92,103,109,110,],[9,9,9,9,9,9,]),'check_cmd':([0,2,92,103,109,110,],[10,10,10,10,10,10,]),'pay_cmd':([0,2,92,103,109,110,],[11,11,11,11,11,11,]),'display_cmd':([0,2,92,103,109,110,],[12,12,12,12,12,12,]),'accept_cmd':([0,2,92,103,109,110,],[13,13,13,13,13,13,]),'if_then_stmt':([0,2,92,103,109,110,],[17,17,17,17,17,17,]),'if_then_else_stmt':([0,2,92,103,109,110,],[18,18,18,18,18,18,]),'EOL':([4,5,],[28,30,]),'quantity':([19,],[34,]),'ticket_or_tickets':([20,],[37,]),'message':([24,],[44,]),'event':([43,55,56,57,89,106,],[58,77,78,79,100,108,]),'condition':([48,],[61,]),'expression':([48,82,83,84,85,86,87,],[62,93,94,95,96,97,98,]),'customer':([53,58,70,],[71,80,88,]),'date':([54,90,91,99,],[74,101,102,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser_mod.py',84),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_mod.py',88),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_mod.py',89),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list','parser_mod.py',90),
  ('statement -> command_stmt EOL','statement',2,'p_statement','parser_mod.py',99),
  ('statement -> declaration_stmt EOL','statement',2,'p_statement','parser_mod.py',100),
  ('statement -> if_stmt','statement',1,'p_statement','parser_mod.py',101),
  ('declaration_stmt -> STRING_TYPE IDENTIFIER EQUALS STRING_LITERAL','declaration_stmt',4,'p_declaration_stmt','parser_mod.py',108),
  ('declaration_stmt -> INT_TYPE IDENTIFIER EQUALS NUMBER','declaration_stmt',4,'p_declaration_stmt','parser_mod.py',109),
  ('declaration_stmt -> DATE_TYPE IDENTIFIER EQUALS DATE_VAL','declaration_stmt',4,'p_declaration_stmt','parser_mod.py',110),
  ('if_stmt -> if_then_stmt','if_stmt',1,'p_if_stmt','parser_mod.py',118),
  ('if_stmt -> if_then_else_stmt','if_stmt',1,'p_if_stmt','parser_mod.py',119),
  ('if_then_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET','if_then_stmt',7,'p_if_then_stmt','parser_mod.py',123),
  ('if_then_else_stmt -> IF LPAREN condition RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET','if_then_else_stmt',11,'p_if_then_else_stmt','parser_mod.py',128),
  ('condition -> expression GT expression','condition',3,'p_condition','parser_mod.py',133),
  ('condition -> expression LT expression','condition',3,'p_condition','parser_mod.py',134),
  ('condition -> expression GE expression','condition',3,'p_condition','parser_mod.py',135),
  ('condition -> expression LE expression','condition',3,'p_condition','parser_mod.py',136),
  ('condition -> expression EQ expression','condition',3,'p_condition','parser_mod.py',137),
  ('condition -> expression NE expression','condition',3,'p_condition','parser_mod.py',138),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser_mod.py',142),
  ('expression -> NUMBER','expression',1,'p_expression','parser_mod.py',143),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser_mod.py',144),
  ('expression -> DATE_VAL','expression',1,'p_expression','parser_mod.py',145),
  ('command_stmt -> book_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',162),
  ('command_stmt -> cancel_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',163),
  ('command_stmt -> list_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',164),
  ('command_stmt -> check_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',165),
  ('command_stmt -> pay_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',166),
  ('command_stmt -> display_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',167),
  ('command_stmt -> accept_cmd','command_stmt',1,'p_command_stmt','parser_mod.py',168),
  ('book_cmd -> BOOK quantity TICKETS FOR customer ON date FOR event','book_cmd',9,'p_book_cmd','parser_mod.py',173),
  ('quantity -> NUMBER','quantity',1,'p_quantity','parser_mod.py',181),
  ('quantity -> IDENTIFIER','quantity',1,'p_quantity','parser_mod.py',182),
  ('customer -> STRING_LITERAL','customer',1,'p_customer','parser_mod.py',190),
  ('customer -> IDENTIFIER','customer',1,'p_customer','parser_mod.py',191),
  ('date -> DATE_VAL','date',1,'p_date','parser_mod.py',199),
  ('date -> IDENTIFIER','date',1,'p_date','parser_mod.py',200),
  ('event -> STRING_LITERAL','event',1,'p_event','parser_mod.py',208),
  ('event -> IDENTIFIER','event',1,'p_event','parser_mod.py',209),
  ('cancel_cmd -> CANCEL ticket_or_tickets FOR customer EVENT event','cancel_cmd',6,'p_cancel_cmd','parser_mod.py',218),
  ('ticket_or_tickets -> TICKET','ticket_or_tickets',1,'p_ticket_or_tickets','parser_mod.py',222),
  ('ticket_or_tickets -> TICKETS','ticket_or_tickets',1,'p_ticket_or_tickets','parser_mod.py',223),
  ('list_cmd -> LIST EVENTS ON date','list_cmd',4,'p_list_cmd','parser_mod.py',228),
  ('list_cmd -> LIST EVENTS FOR event','list_cmd',4,'p_list_cmd','parser_mod.py',229),
  ('check_cmd -> CHECK AVAILABILITY FOR event ON date','check_cmd',6,'p_check_cmd','parser_mod.py',238),
  ('check_cmd -> CHECK PRICE FOR event ON date','check_cmd',6,'p_check_cmd','parser_mod.py',239),
  ('pay_cmd -> PAY FOR event customer','pay_cmd',4,'p_pay_cmd','parser_mod.py',244),
  ('display_cmd -> DISPLAY message','display_cmd',2,'p_display_cmd','parser_mod.py',249),
  ('message -> STRING_LITERAL','message',1,'p_message','parser_mod.py',253),
  ('message -> IDENTIFIER','message',1,'p_message','parser_mod.py',254),
  ('accept_cmd -> ACCEPT IDENTIFIER','accept_cmd',2,'p_accept_cmd','parser_mod.py',262),
  ('EOL -> DOT','EOL',1,'p_EOL','parser_mod.py',271),
]
